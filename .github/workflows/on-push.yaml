name: build
on:
  workflow_dispatch:
  pull_request:
  push:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: test (py${{ matrix.python-version}}, ${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-18.04]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]

    steps:
      - name: Checkout Github Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        id: pip-cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ matrix.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install package dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt

      - name: Run unit-test
        run: |
          make test

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          files: coverage.xml
          env_vars: OS,PYTHON

  check:
    runs-on: ${{ matrix.os }}
    name: static check (pytype, py${{matrix.python-version}}, ${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-18.04]
        python-version: [3.6]

    steps:
      - name: Checkout Github Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        id: pip-cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ matrix.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install package dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt

      - name: Run style-check
        run: |
          make style_check

      - name: Run static-check
        run: |
          make static_check

  security:
    runs-on: ${{ matrix.os }}
    name: security (bandit, py${{ matrix.python-version }}, ${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-18.04]
        python-version: [3.9]

    steps:
      - name: Checkout Github Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        id: pip-cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ matrix.os }}-python${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install bandit
        run: |
          pip install bandit bandit_sarif_formatter

      - name: Install package dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt

      - name: Run bandit
        continue-on-error: true
        run: |
          bandit --format sarif -r megfile/ > bandit-sarif.json

      - name: Expose SARIF Results
        uses: actions/upload-artifact@v2
        with:
          name: SARIF Results
          path: bandit-sarif.json

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: bandit-sarif.json

  scanning:
    runs-on: ${{ matrix.os }}
    name: static check (pyre, py${{matrix.python-version}}, ${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-18.04]
        python-version: [3.9]

    steps:
      - name: Checkout Github Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        id: pip-cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ matrix.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install pyre
        run: |
          pip install pyre-check

      - name: Install package dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt

      - name: Run pyre
        continue-on-error: true
        run: |
          pyre --output=json check > errors.json

      - name: Expose Pyre Results
        uses: actions/upload-artifact@v2
        with:
          name: Pyre Results
          path: errors.json

      - name: Convert to SARIF
        run: |
          cat errors.json | ./scripts/convert_results_to_sarif.py > sarif.json

      - name: Expose SARIF Results
        uses: actions/upload-artifact@v2
        with:
          name: SARIF Results
          path: sarif.json

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: sarif.json

      #- name: Fail Command On Errors
      #  run: |
      #    if [ "$(cat errors.json)" != "[]" ]; then exit 1; fi
